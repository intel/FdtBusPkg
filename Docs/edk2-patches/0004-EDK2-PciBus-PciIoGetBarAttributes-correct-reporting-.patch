From 4b5797f655b854016a1da52692b4d93c75038e8c Mon Sep 17 00:00:00 2001
From: "andrei.warkentin@intel.com" <andrei.warkentin@intel.com>
Date: Wed, 4 Sep 2024 08:18:23 +0300
Subject: [PATCH 4/5] EDK2: PciBus: PciIoGetBarAttributes correct reporting
 address translation for PCI IO BAR

AddrTranslationOffset was not being reported.

Signed-off-by: Andrei Warkentin <andrei.warkentin@intel.com>
---
 MdeModulePkg/Bus/Pci/PciBusDxe/PciIo.c | 64 ++++++++++++++++++++++++++
 1 file changed, 64 insertions(+)

diff --git a/MdeModulePkg/Bus/Pci/PciBusDxe/PciIo.c b/MdeModulePkg/Bus/Pci/PciBusDxe/PciIo.c
index 14bed5472958..1103f3f7ab44 100644
--- a/MdeModulePkg/Bus/Pci/PciBusDxe/PciIo.c
+++ b/MdeModulePkg/Bus/Pci/PciBusDxe/PciIo.c
@@ -1835,6 +1835,59 @@ GetMmioAddressTranslationOffset (
   return (UINT64)-1;
 }
 
+/**
+  Retrieve the AddrTranslationOffset from RootBridgeIo for the
+  specified PCI I/O range.
+
+  @param RootBridgeIo    Root Bridge IO instance.
+  @param AddrRangeMin    The base address of the PCI IO.
+  @param AddrLen         The length of the PCI IO.
+
+  @retval The AddrTranslationOffset from RootBridgeIo for the
+          specified range, or (UINT64) -1 if the range is not
+          found in RootBridgeIo.
+**/
+UINT64
+GetIoAddressTranslationOffset (
+  EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL  *RootBridgeIo,
+  UINT64                           AddrRangeMin,
+  UINT64                           AddrLen
+  )
+{
+  EFI_STATUS                         Status;
+  EFI_ACPI_ADDRESS_SPACE_DESCRIPTOR  *Configuration;
+
+  Status = RootBridgeIo->Configuration (
+                           RootBridgeIo,
+                           (VOID **)&Configuration
+                           );
+  if (EFI_ERROR (Status)) {
+    return (UINT64)-1;
+  }
+
+  // According to UEFI 2.7, EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL::Configuration()
+  // returns host address instead of device address, while AddrTranslationOffset
+  // is not zero, and device address = host address + AddrTranslationOffset, so
+  // we convert host address to device address for range compare.
+  while (Configuration->Desc == ACPI_ADDRESS_SPACE_DESCRIPTOR) {
+    if ((Configuration->ResType == ACPI_ADDRESS_SPACE_TYPE_IO) &&
+        (Configuration->AddrRangeMin + Configuration->AddrTranslationOffset <= AddrRangeMin) &&
+        (Configuration->AddrRangeMin + Configuration->AddrLen + Configuration->AddrTranslationOffset >= AddrRangeMin + AddrLen)
+        )
+    {
+      return Configuration->AddrTranslationOffset;
+    }
+
+    Configuration++;
+  }
+
+  //
+  // The resource occupied by BAR should be in the range reported by RootBridge.
+  //
+  ASSERT (FALSE);
+  return (UINT64)-1;
+}
+
 /**
   Gets the attributes that this PCI controller supports setting on a BAR using
   SetBarAttributes(), and retrieves the list of resource descriptors for a BAR.
@@ -1973,6 +2026,17 @@ PciIoGetBarAttributes (
         FreePool (Descriptor);
         return EFI_UNSUPPORTED;
       }
+    } else {
+      ASSERT (Descriptor->ResType == ACPI_ADDRESS_SPACE_TYPE_IO);
+      Descriptor->AddrTranslationOffset = GetIoAddressTranslationOffset (
+                                            PciIoDevice->PciRootBridgeIo,
+                                            Descriptor->AddrRangeMin,
+                                            Descriptor->AddrLen
+                                            );
+      if (Descriptor->AddrTranslationOffset == (UINT64)-1) {
+        FreePool (Descriptor);
+        return EFI_UNSUPPORTED;
+      }
     }
 
     // According to UEFI spec 2.7, we need return host address for
-- 
2.34.1

